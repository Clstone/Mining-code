SAS Data Sets
1.Descriptor Portion
2.Data Portion

The CONTENTS procedure displays the descriptor portion of a SAS data set.

The descriptor portion contains the metadata of the data set.

There are two types of variables:
1.character contain any value: letters, numbers, special
characters, and blanks. Character values
are stored with a length of 1 to 32,767
bytes. One byte equals one character.
2.numeric stored as floating point numbers in 8 bytes
of storage by default. Eight bytes of floating
point storage provide space for 16 or 17
significant digits. You are not restricted to
8 digits.

SAS names
􀂄 can be 32 characters long.
􀂄 can be uppercase, lowercase, or mixed-case.
􀂄 must start with a letter or underscore. Subsequent
characters can be letters, underscores, or numeric
digits.

SAS stores date values as numeric values.
A SAS date value is stored as the number of days between
January 1, 1960, and a specific date.

A character missing value is displayed as a blank.
A numeric missing value is displayed as a period.

SAS statements
􀂄 usually begin with an identifying keyword
􀂄 always end with a semicolon

Avoid placing the /* comment symbols in columns 1 and 2. On some
operating environments, SAS may interpret these symbols as a request to end
the SAS job or session.

An additional method used for commenting one line of code is to use the
asterisk at the beginning of the comment. Everything that is between the
asterisk and the semicolon is a comment.

What are the two major parts of SAS output?  SAS Log and Output

Syntax errors include
􀂄 misspelled keywords
􀂄 missing or invalid punctuation
􀂄 invalid options.

When SAS encounters a syntax error, SAS underlines the error and the following
information is written to the SAS log:
• the word ERROR or WARNING
• the location of the error
• an explanation of the error.

When you make changes to the program in the Enhanced Editor and have not
saved the new version of the program, the window bar and the top border of
the window reflect that you changed the program without saving it by putting
an asterisk (*) beside the window name. When you save the program, the *
disappears.

A SAS data library is a collection of SAS files that are recognized as a unit by SAS.

You can use the LIBNAME statement to assign a libref to a SAS data library

Rules for naming a libref:
􀂄 must be 8 characters or less
􀂄 must begin with a letter or underscore
􀂄 remaining characters are letters, numbers, or
underscores.

Use the _ALL_ keyword to list all the SAS files in the library
and the NODS option to suppress the descriptor portions of
the data sets.
General form of the NODS option:
NODS must be used in conjunction with the keyword _ALL_.
PROC CONTENTS DATA=libref._ALL_ NODS;
RUN;

Use the PAGEBY statement to put each subgroup on a separate page.(PRINT)
proc print data=work.empdata;
by JobCode;
pageby JobCode;
sum Salary;
run;
The PAGEBY statement must be used with a BY statement.



When the ID and BY statements specify the same variable,(PRINT)
proc sort data=ia.empdata out=work.empdata;
by JobCode;
run;
proc print data=work.empdata;
by JobCode;
id JobCode;
sum Salary;
run;
􀂄 the Obs column is suppressed
􀂄 the BY line is suppressed
􀂄 the ID/BY variable prints in the leftmost column
􀂄 each ID/BY value only prints at the start of each BY group (and on the subtotal line, if a SUM statement is used).


WHERE STATEMENT
LIKE selects observations by comparing character
values to specified patterns.
A percent sign (%) replaces any number of characters.
An underscore (_) replaces one character

The sounds like (=*) operator selects observations that
contain spelling variations of the word or words
specified.
Selects names like SMYTHE and SMITT.

Defining Titles and Footnotes
Features of titles:
􀂄 Titles appear at the top of the page.
􀂄 The default title is The SAS System.
􀂄 The value of n can be from 1 to 10.
􀂄 An unnumbered TITLE is equivalent to TITLE1.
􀂄 Titles remain in effect until they are changed,
cancelled, or you end your SAS session.
􀂄 The null TITLE statement, title;, cancels all titles.

'label' specifies a label up to 256 characters.

PROC FORMAT;
VALUE format-name range1='label '
range2='label '
. . . ;
RUN;

Format-name
􀂄 names the format you are creating
􀂄 cannot be more than 32 characters in SAS System 9
􀂄 for character values, must have a dollar sign ($) as the first character,
a letter or underscore as the second character
􀂄 for numeric values, must have a letter or underscore
as the first character
􀂄 cannot end in a number
􀂄 cannot be the name of a SAS format

Labels
􀂄 can be up to 32,767 characters in length
􀂄 are typically enclosed in quotes, although it is not
required.
Range(s)
􀂄 can be single values
􀂄 ranges of values.
􀂄 does not end with a period in the VALUE statement

Selected Informats
$8. reads 8 columns of character data and removes
leading blanks
$CHAR8. reads 8 columns of character data and preserves
leading blanks.

